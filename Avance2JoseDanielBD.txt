--objetos pl sql 

-- Creación de tabla de presupuesto
CREATE TABLE Presupuesto (
    ID_Presupuesto INT PRIMARY KEY,
    Nombre VARCHAR2(255),
    Monto DECIMAL(10, 2),
    FechaInicio DATE,
    FechaFin DATE
);

-- Creación de tabla de modificaciones
CREATE TABLE Modificacion (
    ID_Modificacion INT PRIMARY KEY,
    ID_Presupuesto INT,
    TipoModificacion VARCHAR2(50),
    FechaModificacion DATE,
    FOREIGN KEY (ID_Presupuesto) REFERENCES Presupuesto(ID_Presupuesto)
);

-- Procedimiento para crear un nuevo presupuesto
CREATE OR REPLACE PROCEDURE CrearPresupuesto (
    p_ID_Presupuesto INT,
    p_Nombre VARCHAR2,
    p_Monto DECIMAL,
    p_FechaInicio DATE,
    p_FechaFin DATE
)
IS
BEGIN
    INSERT INTO Presupuesto (ID_Presupuesto, Nombre, Monto, FechaInicio, FechaFin)
    VALUES (p_ID_Presupuesto, p_Nombre, p_Monto, p_FechaInicio, p_FechaFin);
    
    INSERT INTO Modificacion (ID_Modificacion, ID_Presupuesto, TipoModificacion, FechaModificacion)
    VALUES (/* generación automática de ID */, p_ID_Presupuesto, 'Creación', SYSDATE);
    
    COMMIT;
END;

-- Procedimiento para actualizar un presupuesto existente
CREATE OR REPLACE PROCEDURE ActualizarPresupuesto (
    p_ID_Presupuesto INT,
    p_NuevoMonto DECIMAL,
    p_NuevaFechaFin DATE
)
IS
BEGIN
    UPDATE Presupuesto
    SET Monto = p_NuevoMonto, FechaFin = p_NuevaFechaFin
    WHERE ID_Presupuesto = p_ID_Presupuesto;
    
    INSERT INTO Modificacion (ID_Modificacion, ID_Presupuesto, TipoModificacion, FechaModificacion)
    VALUES (/* generación automática de ID */, p_ID_Presupuesto, 'Actualización', SYSDATE);
    
    COMMIT;
END;

-- Procedimiento para eliminar un presupuesto
CREATE OR REPLACE PROCEDURE EliminarPresupuesto (
    p_ID_Presupuesto INT
)
IS
BEGIN
    DELETE FROM Presupuesto
    WHERE ID_Presupuesto = p_ID_Presupuesto;
    
    INSERT INTO Modificacion (ID_Modificacion, ID_Presupuesto, TipoModificacion, FechaModificacion)
    VALUES (/* generación automática de ID */, p_ID_Presupuesto, 'Eliminación', SYSDATE);
    
    COMMIT;
END;

-- Función para obtener el total del presupuesto disponible
CREATE OR REPLACE FUNCTION ObtenerTotalPresupuesto RETURN DECIMAL
IS
    totalPresupuesto DECIMAL(10, 2);
BEGIN
    SELECT SUM(Monto) INTO totalPresupuesto FROM Presupuesto;
    RETURN totalPresupuesto;
END;

-- Trigger para registrar la fecha de creación de un presupuesto
CREATE OR REPLACE TRIGGER Presupuesto_BI
BEFORE INSERT ON Presupuesto
FOR EACH ROW
BEGIN
    :NEW.FechaInicio := SYSDATE;
END;

-- Trigger para registrar las modificaciones en un presupuesto
CREATE OR REPLACE TRIGGER Presupuesto_BU
BEFORE UPDATE ON Presupuesto
FOR EACH ROW
BEGIN
    INSERT INTO Modificacion (ID_Modificacion, ID_Presupuesto, TipoModificacion, FechaModificacion)
    VALUES (/* generación automática de ID */, :OLD.ID_Presupuesto, 'Modificación', SYSDATE);
END;


-- Diccionario de datos 

-- Creación de tablas
CREATE TABLE Presupuesto (
    ID_Presupuesto INT PRIMARY KEY,
    Nombre VARCHAR2(255),
    Monto DECIMAL(10, 2),
    FechaInicio DATE,
    FechaFin DATE
);

CREATE TABLE Modificacion (
    ID_Modificacion INT PRIMARY KEY,
    ID_Presupuesto INT,
    TipoModificacion VARCHAR2(50),
    FechaModificacion DATE,
    FOREIGN KEY (ID_Presupuesto) REFERENCES Presupuesto(ID_Presupuesto)
);

-- Procedimientos almacenados
CREATE OR REPLACE PROCEDURE CrearPresupuesto (
    p_ID_Presupuesto IN Presupuesto.ID_Presupuesto%TYPE,
    p_Nombre IN Presupuesto.Nombre%TYPE,
    p_Monto IN Presupuesto.Monto%TYPE,
    p_FechaInicio IN Presupuesto.FechaInicio%TYPE,
    p_FechaFin IN Presupuesto.FechaFin%TYPE
)
IS
BEGIN
    INSERT INTO Presupuesto (ID_Presupuesto, Nombre, Monto, FechaInicio, FechaFin)
    VALUES (p_ID_Presupuesto, p_Nombre, p_Monto, p_FechaInicio, p_FechaFin);
END;

CREATE OR REPLACE PROCEDURE ActualizarPresupuesto (
    p_ID_Presupuesto IN Presupuesto.ID_Presupuesto%TYPE,
    p_NuevoMonto IN Presupuesto.Monto%TYPE,
    p_NuevaFechaFin IN Presupuesto.FechaFin%TYPE
)
IS
BEGIN
    UPDATE Presupuesto
    SET Monto = p_NuevoMonto,
        FechaFin = p_NuevaFechaFin
    WHERE ID_Presupuesto = p_ID_Presupuesto;
END;

CREATE OR REPLACE PROCEDURE EliminarPresupuesto (
    p_ID_Presupuesto IN Presupuesto.ID_Presupuesto%TYPE
)
IS
BEGIN
    DELETE FROM Presupuesto
    WHERE ID_Presupuesto = p_ID_Presupuesto;
END;

-- Funciones
CREATE OR REPLACE FUNCTION ObtenerTotalPresupuesto
RETURN DECIMAL
IS
    totalPresupuesto DECIMAL(10, 2);
BEGIN
    SELECT SUM(Monto) INTO totalPresupuesto FROM Presupuesto;
    RETURN totalPresupuesto;
END;

-- Desencadenadores (Triggers)
CREATE OR REPLACE TRIGGER Presupuesto_BI
BEFORE INSERT ON Presupuesto
FOR EACH ROW
BEGIN
    :NEW.FechaInicio := SYSDATE;
END;

CREATE OR REPLACE TRIGGER Presupuesto_BU
BEFORE UPDATE ON Presupuesto
FOR EACH ROW
BEGIN
    INSERT INTO Modificacion (ID_Modificacion, ID_Presupuesto, TipoModificacion, FechaModificacion)
    VALUES (Modificacion_SEQ.NEXTVAL, :OLD.ID_Presupuesto, 'Actualización', SYSDATE);
END;

-- Vistas
CREATE OR REPLACE VIEW VistaPresupuestoDetallado AS
SELECT * FROM Presupuesto;
